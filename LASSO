"@A graduate student aiming to apply for a PhD"
import pandas as pd
from sklearn.linear_model import Lasso
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
import matplotlib.pyplot as plt
import numpy as np
import sys

# 传递文件路径并读取数据
def run_lasso(file_path):
    # 读取数据
    df = pd.read_excel(file_path)

    df['Date'] = pd.to_datetime(df['Date'])
    df.set_index('Date', inplace=True)

    # 创建滞后特征
    features = df.drop(columns='Gas close').shift(1)
    target = df['Gas close']

    # 删除NaN值
    features = features[1:]
    target = target[1:]

    # 训练Lasso回归模型
    lasso = Lasso(alpha=0.03)
    lasso.fit(features, target)

    # 预测
    predictions = lasso.predict(features)

    # 计算评估指标
    r2 = r2_score(target, predictions)
    mse = mean_squared_error(target, predictions)
    rmse = np.sqrt(mse)
    mae = mean_absolute_error(target, predictions)

    # 打印评估指标
    print(f'Lasso Model Evaluation: ')
    print(f'R2 Score: {r2}')
    print(f'MSE: {mse}')
    print(f'RMSE: {rmse}')
    print(f'MAE: {mae}')

    # 打印所有系数
    coefficients = pd.Series(lasso.coef_, index=features.columns)
    print("Model Coefficients:")
    print(coefficients)

    # 绘制实际值与预测值的对比图
    plt.figure(figsize=(12, 6))
    plt.plot(target, label='Actual', color='blue')
    plt.plot(predictions, label='Predicted', color='red')
    plt.title('Actual vs Predicted (Lasso)')
    plt.xlabel('Time')
    plt.ylabel('Gas Price')
    plt.legend()
    plt.tight_layout()
    plt.show()

# ===== 主程序入口 =====
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("❌ 错误：缺少 Excel 文件路径参数")
        sys.exit(1)

    file_path = sys.argv[1]
    print(f"✅ 接收到文件路径参数：{file_path}")
    run_lasso(file_path)
